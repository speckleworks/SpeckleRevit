<UserControl x:Class="SpeckleRevitPlugin.UI.InputControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:elementSelector="clr-namespace:SpeckleRevitPlugin.UI.ElementSelector"
             xmlns:streamSelector="clr-namespace:SpeckleRevitPlugin.UI.StreamSelector"
             xmlns:booleanSelector="clr-namespace:SpeckleRevitPlugin.UI.BooleanSelector"
             xmlns:ui="clr-namespace:SpeckleRevitPlugin.UI"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:command="http://www.galasoft.ch/mvvmlight"
             mc:Ignorable="d" 
             d:DesignHeight="200" d:DesignWidth="400">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <ui:BooleanInverterConverter x:Key="BooleanInverterConverter"/>
        <DataTemplate DataType="{x:Type streamSelector:StreamSelectorViewModel}">
            <streamSelector:StreamSelector/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type elementSelector:ElementSelectorViewModel}">
            <elementSelector:ElementSelector/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type booleanSelector:BooleanSelectorViewModel}">
            <booleanSelector:BooleanSelector/>
        </DataTemplate>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="20"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="50"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Label x:Name="Label1" 
               Grid.Row="0" 
               Grid.Column="1" 
               Content="{Binding Input.Name}" 
               VerticalAlignment="Top" 
               HorizontalAlignment="Left" 
               Margin="10,0,0,0" 
               FontSize="18"/>
        <controls:ToggleSwitchButton Name="ShowInputToggleButton"
                                     Grid.Row="1"
                                     Grid.Column="1"
                                     Width="20"
                                     Height="20"
                                     Cursor="Hand"
                                     HorizontalAlignment="Right"
                                     Margin="0,0,10,0"
                                     IsChecked="{Binding ShowInputs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     Style="{DynamicResource MaterialDesignFlatToggleButton}">
            <Viewbox Width="16" Height="16">
                <Canvas Width="24" Height="24">
                    <Path Data="M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17M12,4.5C7,4.5 2.73,7.61 1,12C2.73,16.39 7,19.5 12,19.5C17,19.5 21.27,16.39 23,12C21.27,7.61 17,4.5 12,4.5Z" 
                          Fill="Black" />
                </Canvas>
            </Viewbox>
        </controls:ToggleSwitchButton>
        <Border BorderThickness="0" 
                BorderBrush="Transparent"
                Grid.Row="0" 
                Grid.RowSpan="2"
                Grid.Column="0" 
                Grid.ColumnSpan="2"
                Background="White" Opacity="0.75"
                Visibility="{Binding ShowMenu, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}">
        </Border>
        <StackPanel Orientation="Horizontal" Grid.Row="0" 
                    Grid.RowSpan="2"
                    Grid.Column="0" 
                    Grid.ColumnSpan="2">
            <Button Name="OptionsButton"
                    Width="36"
                    Height="36"
                    VerticalAlignment="Top"
                    HorizontalAlignment="Left"
                    Margin="7"
                    Command="{Binding ToggleMenu, Mode=OneWay}"
                    Style="{DynamicResource MaterialDesignFloatingActionButton}">
                <Viewbox Width="24" Height="24">
                    <Canvas Width="24" Height="24">
                        <Path Data="M11,4H13V16L18.5,10.5L19.92,11.92L12,19.84L4.08,11.92L5.5,10.5L11,16V4Z" 
                                  Fill="White" />
                    </Canvas>
                </Viewbox>
            </Button>
            <materialDesign:TransitioningContent OpeningEffect="{materialDesign:TransitionEffect SlideInFromLeft, Duration=0:0:1.5}">
                <controls:ToggleSwitchButton Name="DataSourceButton"
                                             Width="36"
                                             Height="36"
                                             VerticalAlignment="Top"
                                             HorizontalAlignment="Left"
                                             Margin="10,7,0,0"
                                             IsChecked="{Binding IsSpeckleInput, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             IsEnabled="{Binding Input.AcceptsLocalData}"
                                             Command="{Binding ToggleSpeckleInput, Mode=OneWay}" 
                                             CommandParameter="{Binding IsChecked, ElementName=DataSourceButton}"
                                             Style="{DynamicResource MaterialDesignActionToggleButton}"
                                             Visibility="{Binding ShowMenu, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Viewbox Width="24" Height="24">
                        <Canvas Width="24" Height="24">
                            <Path Data="M17,13L12,18L7,13H10V9H14V13M19.35,10.03C18.67,6.59 15.64,4 12,4C9.11,4 6.6,5.64 5.35,8.03C2.34,8.36 0,10.9 0,14A6,6 0 0,0 6,20H19A5,5 0 0,0 24,15C24,12.36 21.95,10.22 19.35,10.03Z" 
                                  Fill="Black" />
                        </Canvas>
                    </Viewbox>
                </controls:ToggleSwitchButton>
            </materialDesign:TransitioningContent>
            <materialDesign:TransitioningContent OpeningEffect="{materialDesign:TransitionEffect ExpandIn, Duration=0:0:1.5}">
                <Button Name="DeleteButton"
                            Width="36"
                            Height="36"
                            VerticalAlignment="Top"
                            HorizontalAlignment="Left"
                            Margin="10,7,0,0"
                            Command="{Binding Delete, Mode=OneWay}"
                            Style="{DynamicResource MaterialDesignFloatingActionButton}"
                            IsEnabled="{Binding Input.IsRequired, Converter={StaticResource BooleanInverterConverter}}"
                            Visibility="{Binding ShowMenu, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Viewbox Width="24" Height="24">
                        <Canvas Width="24" Height="24">
                            <Path Data="M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z" 
                                      Fill="White" />
                        </Canvas>
                    </Viewbox>
                </Button>
            </materialDesign:TransitioningContent>
        </StackPanel>
        <ContentControl Grid.Row="2"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Content="{Binding SelectedDataInput, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        Visibility="{Binding ShowInputs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanToVisibilityConverter}}">
        </ContentControl>
    </Grid>
</UserControl>
